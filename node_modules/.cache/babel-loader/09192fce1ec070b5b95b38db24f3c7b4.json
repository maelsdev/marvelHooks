{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/marvelHooks/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [charEnded, setCharEnded] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onRequest = offset => {\n    onCharLoading();\n    marvelService.getAllCharacters(offset).then(onCharLoaded).catch(onError);\n  };\n\n  const onCharLoading = () => {\n    setNewItemsLoading(true);\n  };\n\n  const onCharLoaded = newCharlist => {\n    let ended = false;\n\n    if (newCharlist.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharlist]);\n    setLoading(loading => false);\n    setNewItemsLoading(newItemsLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => charEnded);\n  };\n\n  const onError = () => {\n    setError(true);\n    setLoading(false);\n  };\n\n  const getItems = charlist => {\n    const items = charlist.map(item => {\n      const itemStyle = item.id === props.selectedChar ? \"char__item char__item_selected\" : \"char__item\";\n      const imgStyle = item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {\n        objectFit: \"fill\"\n      } : null;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: itemStyle,\n        onClick: () => props.onCharSelected(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    });\n    return items;\n  };\n\n  const items = getItems(charList);\n  const spinner = !(loading || error) ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 41\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 32\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list \",\n    children: [spinner, errorMessage, /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemsLoading,\n      style: {\n        display: charEnded ? \"none\" : \"block\"\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharList, \"6wAB3RQgnjOuVgx1qGBZ4zwkl7U=\");\n\n_c = CharList;\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/marvelHooks/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","MarvelService","Spinner","ErrorMessage","CharList","props","charList","setCharList","loading","setLoading","error","setError","offset","setOffset","newItemsLoading","setNewItemsLoading","charEnded","setCharEnded","marvelService","onRequest","onCharLoading","getAllCharacters","then","onCharLoaded","catch","onError","newCharlist","ended","length","getItems","charlist","items","map","item","itemStyle","id","selectedChar","imgStyle","thumbnail","objectFit","onCharSelected","name","spinner","errorMessage","display"],"mappings":"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","sourcesContent":["import \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const marvelService = new MarvelService();\n\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onRequest = (offset) => {\n    onCharLoading();\n    marvelService.getAllCharacters(offset).then(onCharLoaded).catch(onError);\n  };\n\n  const onCharLoading = () => {\n    setNewItemsLoading(true);\n  };\n\n  const onCharLoaded = (newCharlist) => {\n    let ended = false;\n    if (newCharlist.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharlist]);\n    setLoading((loading) => false);\n    setNewItemsLoading((newItemsLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => charEnded);\n  };\n\n  const onError = () => {\n    setError(true);\n    setLoading(false);\n  };\n\n  const getItems = (charlist) => {\n    const items = charlist.map((item) => {\n      const itemStyle =\n        item.id === props.selectedChar\n          ? \"char__item char__item_selected\"\n          : \"char__item\";\n      const imgStyle =\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n          ? { objectFit: \"fill\" }\n          : null;\n\n      return (\n        <li\n          className={itemStyle}\n          key={item.id}\n          onClick={() => props.onCharSelected(item.id)}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return items;\n  };\n\n  const items = getItems(charList);\n  const spinner = !(loading || error) ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className={\"char__list \"}>\n      {spinner}\n      {errorMessage}\n      <ul className=\"char__grid\">{items}</ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemsLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default CharList;\n"]},"metadata":{},"sourceType":"module"}