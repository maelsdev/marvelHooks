{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/marvel/src/components/charList/CharList.js\";\nimport { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../rrorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  }\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        objectFit: \"cover\"\n      };\n\n      if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\n          objectFit: \"unset\"\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/marvel/src/components/charList/CharList.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","marvelService","onCharListLoaded","setState","onError","componentDidMount","getAllCharacters","then","catch","renderItems","arr","items","map","item","imgStyle","objectFit","thumbnail","name","id","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../rrorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.marvelService\n      .getAllCharacters()\n      .then(this.onCharListLoaded)\n      .catch(this.onError);\n  }\n\n  onCharListLoaded = (charList) => {\n    this.setState({\n      charList,\n      loading: false,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map((item) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li className=\"char__item\" key={item.id}>\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  render() {\n    const { charList, loading, error } = this.state;\n\n    const items = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button className=\"button button__main button__long\">\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CharList;\n"]},"metadata":{},"sourceType":"module"}