{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/marvel/src/components/charList/CharList.js\";\nimport \"./charList.scss\";\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: false,\n      error: false,\n      offset: 210,\n      newItemsLoading: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.newItemsLoading = offset => {\n      this.onCharLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        newItemsLoading: true\n      });\n    };\n\n    this.onCharLoaded = newCharlist => {\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newCharlist],\n        loading: true,\n        newItemsLoading: false,\n        offset: offset + 9\n      }));\n    };\n\n    this.getItems = charlist => {\n      const items = charlist.map(item => {\n        const itemStyle = item.id === this.props.selectedChar ? \"char__item char__item_selected\" : \"char__item\";\n        const imgStyle = item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {\n          objectFit: \"fill\"\n        } : null;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: itemStyle,\n          onClick: () => this.props.onCharSelected(item.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnail,\n            alt: item.name,\n            style: imgStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char__name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this);\n      });\n      return items;\n    };\n\n    this.onError = charList => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.newItemsLoading();\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      offset\n    } = this.state;\n    const items = this.getItems(charList);\n    const spinner = !(loading || error) ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 43\n    }, this) : null;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 34\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list \",\n      children: [spinner, errorMessage, /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__grid\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        onClick: () => this.newItemsLoading(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/marvel/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","state","charList","loading","error","offset","newItemsLoading","marvelService","onCharLoading","getAllCharacters","then","onCharLoaded","catch","onError","setState","newCharlist","getItems","charlist","items","map","item","itemStyle","id","props","selectedChar","imgStyle","thumbnail","objectFit","onCharSelected","name","componentDidMount","render","spinner","errorMessage"],"mappings":"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","sourcesContent":["import \"./charList.scss\";\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: false,\n    error: false,\n    offset: 210,\n    newItemsLoading: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.newItemsLoading();\n  }\n\n  newItemsLoading = (offset) => {\n    this.onCharLoading();\n    this.marvelService\n      .getAllCharacters(offset)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  onCharLoading = () => {\n    this.setState({ newItemsLoading: true });\n  };\n  onCharLoaded = (newCharlist) => {\n    this.setState(({ offset, charList }) => ({\n      charList: [...charList, ...newCharlist],\n      loading: true,\n      newItemsLoading: false,\n      offset: offset + 9,\n    }));\n  };\n\n  getItems = (charlist) => {\n    const items = charlist.map((item) => {\n      const itemStyle =\n        item.id === this.props.selectedChar\n          ? \"char__item char__item_selected\"\n          : \"char__item\";\n      const imgStyle =\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n          ? { objectFit: \"fill\" }\n          : null;\n\n      return (\n        <li\n          className={itemStyle}\n          key={item.id}\n          onClick={() => this.props.onCharSelected(item.id)}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return items;\n  };\n\n  onError = (charList) => {\n    this.setState({ error: true, loading: false });\n  };\n\n  render() {\n    const { charList, loading, error, offset } = this.state;\n\n    const items = this.getItems(charList);\n    const spinner = !(loading || error) ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n      <div className={\"char__list \"}>\n        {spinner}\n        {errorMessage}\n        <ul className=\"char__grid\">{items}</ul>\n        <button\n          className=\"button button__main button__long\"\n          onClick={() => this.newItemsLoading(offset)}\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CharList;\n"]},"metadata":{},"sourceType":"module"}