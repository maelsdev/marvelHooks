{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\projects\\\\marvelHooks\\\\src\\\\components\\\\charList\\\\CharList.js\",\n    _s = $RefreshSig$();\n\nimport \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const {\n    loading,\n    error,\n    getAllCharacters\n  } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true); // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = id => {\n    itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        objectFit: \"cover\"\n      };\n\n      if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\n          objectFit: \"unset\"\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: el => itemRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(item.id);\n          focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === \" \" || e.key === \"Enter\") {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  const items = renderItems(charList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 32\n  }, this) : null;\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 48\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, items, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        display: charEnded ? \"none\" : \"block\"\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharList, \"tj/Dnpr467ph91O/Weo59QCHayg=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharList;\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["C:/MAMP/htdocs/projects/marvelHooks/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","useMarvelService","Spinner","ErrorMessage","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","loading","error","getAllCharacters","onRequest","initial","then","onCharListLoaded","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","objectFit","thumbnail","el","onCharSelected","e","key","name","errorMessage","spinner","display"],"mappings":"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","sourcesContent":["import \"./charList.scss\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList((charList) => [...charList, ...newCharList]);\r\n\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded((charEnded) => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          key={item.id}\r\n          onClick={() => {\r\n            props.onCharSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \" \" || e.key === \"Enter\") {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharList;\r\n"]},"metadata":{},"sourceType":"module"}