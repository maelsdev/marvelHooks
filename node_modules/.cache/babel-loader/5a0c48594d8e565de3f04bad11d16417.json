{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\projects\\\\marvelHooks\\\\src\\\\components\\\\randomChar\\\\RandomChar.js\",\n    _s = $RefreshSig$();\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport MarvelService from \"../../services/MarvelService\";\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { useHttp } from \"../../hooks/http.hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomChar = props => {\n  _s();\n\n  const [char, setChar] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    updateChar(); // eslint-disable-next-line\n  }, []);\n\n  const onCharLoaded = char => {\n    setChar(char);\n    setLoading(false);\n  };\n\n  const onCharLoading = () => {\n    setLoading(true);\n  };\n\n  const updateChar = () => {\n    onCharLoading();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    marvelService.getCharacter(id).then(onCharLoaded).catch(onError);\n  };\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  };\n\n  const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 41\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 32\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 29\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [content, errorMessage, spinner, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main\",\n        onClick: updateChar,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RandomChar, \"CK94bcL42BPKkoWAbN2Zf29Wagk=\");\n\n_c = RandomChar;\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  const style = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {\n    objectFit: \"fill\"\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: name,\n      style: style,\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description === \"\" ? \"Decription is not Aviable\" : description.slice(0, 200) + \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = View;\n\nconst test = () => {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp;\n  console.log(request.getCharacter(100106));\n};\n\nexport default RandomChar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomChar\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/MAMP/htdocs/projects/marvelHooks/src/components/randomChar/RandomChar.js"],"names":["mjolnir","MarvelService","useState","useEffect","Spinner","ErrorMessage","useHttp","RandomChar","props","char","setChar","loading","setLoading","error","setError","marvelService","updateChar","onCharLoaded","onCharLoading","id","Math","floor","random","getCharacter","then","catch","onError","content","errorMessage","spinner","View","name","description","thumbnail","homepage","wiki","style","objectFit","slice","test","request","clearError","console","log"],"mappings":"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","sourcesContent":["import \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\nimport { useHttp } from \"../../hooks/http.hooks\";\r\n\r\nconst RandomChar = (props) => {\r\n  const [char, setChar] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const marvelService = new MarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    setLoading(false);\r\n  };\r\n\r\n  const onCharLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    onCharLoading();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    marvelService.getCharacter(id).then(onCharLoaded).catch(onError);\r\n  };\r\n\r\n  const onError = () => {\r\n    setLoading(false);\r\n    setError(true);\r\n  };\r\n\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {content}\r\n      {errorMessage}\r\n      {spinner}\r\n\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n  const style =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? { objectFit: \"fill\" }\r\n      : null;\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt={name}\r\n        style={style}\r\n        className=\"randomchar__img\"\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">\r\n          {description === \"\"\r\n            ? \"Decription is not Aviable\"\r\n            : description.slice(0, 200) + \"...\"}\r\n        </p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst test = () => {\r\n  const { loading, error, request, clearError } = useHttp;\r\n  console.log(request.getCharacter(100106));\r\n};\r\n\r\nexport default RandomChar;\r\n"]},"metadata":{},"sourceType":"module"}