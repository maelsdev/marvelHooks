{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from \"../hooks/http.hooks\";\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _basis = \"https://gateway.marvel.com:443/v1/public/characters\";\n  const _apiKey = \"apikey=7aee92fdbe4f8e13d3e13670a06c2326\";\n  const _basisComics = \"https://gateway.marvel.com:443/v1/public/comics\";\n  const _offset = 210;\n\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _offset;\n    const res = await request(`${_basis}?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_basis}/${id}?&${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _offset;\n    const res = await request(`${_basisComics}?limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n\n  const getSingleComic = async id => {\n    const res = await request(`${_basisComics}/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      issueNumber: comics.issueNumber,\n      title: comics.title,\n      price: comics.prices[0].price,\n      url: comics.urls[0].url,\n      description: comics.description || \"There is not description\",\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\n      language: comics.textObjects.language || \"en-us\"\n    };\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getSingleComic\n  };\n};\n\n_s(useMarvelService, \"uUyY7lUIwkf2no8vbgFvZlrZhN4=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","clearError","_basis","_apiKey","_basisComics","_offset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getSingleComic","comics","thumbnail","path","extension","issueNumber","title","price","prices","url","urls","description","pageCount","language","textObjects","char","name","slice","homepage","wiki","items"],"sources":["C:/MAMP/htdocs/projects/marvelHooks/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n  const _basis = \"https://gateway.marvel.com:443/v1/public/characters\";\r\n  const _apiKey = \"apikey=7aee92fdbe4f8e13d3e13670a06c2326\";\r\n  const _basisComics = \"https://gateway.marvel.com:443/v1/public/comics\";\r\n\r\n  const _offset = 210;\r\n\r\n  const getAllCharacters = async (offset = _offset) => {\r\n    const res = await request(`${_basis}?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_basis}/${id}?&${_apiKey}`);\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = _offset) => {\r\n    const res = await request(\r\n      `${_basisComics}?limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getSingleComic = async (id) => {\r\n    const res = await request(`${_basisComics}/${id}?${_apiKey}`);\r\n\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      issueNumber: comics.issueNumber,\r\n      title: comics.title,\r\n      price: comics.prices[0].price,\r\n      url: comics.urls[0].url,\r\n      description: comics.description || \"There is not description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      language: comics.textObjects.language || \"en-us\",\r\n    };\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getSingleComic,\r\n  };\r\n};\r\nexport default useMarvelService;\r\n"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC,OAAF;IAAWC,OAAX;IAAoBC,KAApB;IAA2BC;EAA3B,IAA0CL,OAAO,EAAvD;EACA,MAAMM,MAAM,GAAG,qDAAf;EACA,MAAMC,OAAO,GAAG,yCAAhB;EACA,MAAMC,YAAY,GAAG,iDAArB;EAEA,MAAMC,OAAO,GAAG,GAAhB;;EAEA,MAAMC,gBAAgB,GAAG,kBAA4B;IAAA,IAArBC,MAAqB,uEAAZF,OAAY;IACnD,MAAMG,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEG,MAAO,mBAAkBK,MAAO,IAAGJ,OAAQ,EAA/C,CAAzB;IACA,OAAOK,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,mBAArB,CAAP;EACD,CAHD;;EAKA,MAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;IACjC,MAAMN,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEG,MAAO,IAAGY,EAAG,KAAIX,OAAQ,EAA7B,CAAzB;IAEA,OAAOS,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAA1B;EACD,CAJD;;EAMA,MAAMK,YAAY,GAAG,kBAA4B;IAAA,IAArBR,MAAqB,uEAAZF,OAAY;IAC/C,MAAMG,GAAG,GAAG,MAAMT,OAAO,CACtB,GAAEK,YAAa,mBAAkBG,MAAO,IAAGJ,OAAQ,EAD7B,CAAzB;IAIA,OAAOK,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBK,gBAArB,CAAP;EACD,CAND;;EAQA,MAAMC,cAAc,GAAG,MAAOH,EAAP,IAAc;IACnC,MAAMN,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEK,YAAa,IAAGU,EAAG,IAAGX,OAAQ,EAAlC,CAAzB;IAEA,OAAOa,gBAAgB,CAACR,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAAvB;EACD,CAJD;;EAMA,MAAMM,gBAAgB,GAAIE,MAAD,IAAY;IACnC,OAAO;MACLJ,EAAE,EAAEI,MAAM,CAACJ,EADN;MAELK,SAAS,EAAED,MAAM,CAACC,SAAP,CAAiBC,IAAjB,GAAwB,GAAxB,GAA8BF,MAAM,CAACC,SAAP,CAAiBE,SAFrD;MAGLC,WAAW,EAAEJ,MAAM,CAACI,WAHf;MAILC,KAAK,EAAEL,MAAM,CAACK,KAJT;MAKLC,KAAK,EAAEN,MAAM,CAACO,MAAP,CAAc,CAAd,EAAiBD,KALnB;MAMLE,GAAG,EAAER,MAAM,CAACS,IAAP,CAAY,CAAZ,EAAeD,GANf;MAOLE,WAAW,EAAEV,MAAM,CAACU,WAAP,IAAsB,0BAP9B;MAQLC,SAAS,EAAEX,MAAM,CAACW,SAAP,GACN,GAAEX,MAAM,CAACW,SAAU,KADb,GAEP,0CAVC;MAWLC,QAAQ,EAAEZ,MAAM,CAACa,WAAP,CAAmBD,QAAnB,IAA+B;IAXpC,CAAP;EAaD,CAdD;;EAgBA,MAAMlB,mBAAmB,GAAIoB,IAAD,IAAU;IACpC,OAAO;MACLlB,EAAE,EAAEkB,IAAI,CAAClB,EADJ;MAELmB,IAAI,EAAED,IAAI,CAACC,IAFN;MAGLL,WAAW,EAAEI,IAAI,CAACJ,WAAL,GACR,GAAEI,IAAI,CAACJ,WAAL,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KADzB,GAET,4CALC;MAMLf,SAAS,EAAEa,IAAI,CAACb,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BY,IAAI,CAACb,SAAL,CAAeE,SANjD;MAOLc,QAAQ,EAAEH,IAAI,CAACL,IAAL,CAAU,CAAV,EAAaD,GAPlB;MAQLU,IAAI,EAAEJ,IAAI,CAACL,IAAL,CAAU,CAAV,EAAaD,GARd;MASLR,MAAM,EAAEc,IAAI,CAACd,MAAL,CAAYmB;IATf,CAAP;EAWD,CAZD;;EAcA,OAAO;IACLvC,OADK;IAELE,KAFK;IAGLM,gBAHK;IAILO,YAJK;IAKLZ,UALK;IAMLc,YANK;IAOLE;EAPK,CAAP;AASD,CAxED;;GAAMpB,gB;UAC4CD,O;;;AAwElD,eAAeC,gBAAf"},"metadata":{},"sourceType":"module"}