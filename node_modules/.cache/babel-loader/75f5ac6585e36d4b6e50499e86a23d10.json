{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\projects\\\\marvelHooks\\\\src\\\\components\\\\charList\\\\CharList.js\",\n    _s = $RefreshSig$();\n\nimport \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onRequest = offset => {\n    onCharListLoading();\n    marvelService.getAllCharacters(offset).then(onCharListLoaded).catch(onError);\n  };\n\n  const onCharListLoading = () => {\n    setNewItemLoading(true);\n  };\n\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setLoading(loading => false);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n\n  const onError = () => {\n    setError(true);\n    setLoading(loading => false);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = id => {\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: el => itemRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(item.id);\n          focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === ' ' || e.key === \"Enter\") {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  }\n\n  const items = renderItems(charList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 32\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 29\n  }, this) : null;\n  const content = !(loading || error) ? items : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CharList, \"exrqpRSOjkLpVnp45lHaoOUAdyE=\");\n\n_c = CharList;\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["C:/MAMP/htdocs/projects/marvelHooks/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","MarvelService","Spinner","ErrorMessage","CharList","props","charList","setCharList","loading","setLoading","error","setError","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","thumbnail","el","onCharSelected","e","key","name","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import \"./charList.scss\";\r\nimport { useState,useEffect,useRef} from \"react\";\r\n\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst CharList = (props) => {\r\n\r\n  const [charList, setCharList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n  \r\n  const marvelService = new MarvelService();\r\n\r\n  useEffect(() => {\r\n      onRequest();\r\n  }, [])\r\n\r\n  const onRequest = (offset) => {\r\n      onCharListLoading();\r\n      marvelService.getAllCharacters(offset)\r\n          .then(onCharListLoaded)\r\n          .catch(onError)\r\n  }\r\n\r\n  const onCharListLoading = () => {\r\n      setNewItemLoading(true);\r\n  }\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n      let ended = false;\r\n      if (newCharList.length < 9) {\r\n          ended = true;\r\n      }\r\n\r\n      setCharList(charList => [...charList, ...newCharList]);\r\n      setLoading(loading => false);\r\n      setNewItemLoading(newItemLoading => false);\r\n      setOffset(offset => offset + 9);\r\n      setCharEnded(charEnded => ended);\r\n  }\r\n\r\n  const onError = () => {\r\n      setError(true);\r\n      setLoading(loading => false);\r\n  }\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n     \r\n      itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n      itemRefs.current[id].classList.add('char__item_selected');\r\n      itemRefs.current[id].focus();\r\n  }\r\n\r\n  \r\n  function renderItems(arr) {\r\n      const items =  arr.map((item, i) => {\r\n          let imgStyle = {'objectFit' : 'cover'};\r\n          if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n              imgStyle = {'objectFit' : 'unset'};\r\n          }\r\n          \r\n          return (\r\n              <li \r\n                  className=\"char__item\"\r\n                  tabIndex={0}\r\n                  ref={el => itemRefs.current[i] = el}\r\n                  key={item.id}\r\n                  onClick={() => {\r\n                      props.onCharSelected(item.id);\r\n                      focusOnItem(i);\r\n                  }}\r\n                  onKeyPress={(e) => {\r\n                      if (e.key === ' ' || e.key === \"Enter\") {\r\n                          props.onCharSelected(item.id);\r\n                          focusOnItem(i);\r\n                      }\r\n                  }}>\r\n                      <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                      <div className=\"char__name\">{item.name}</div>\r\n              </li>\r\n          )\r\n      });\r\n      \r\n      return (\r\n          <ul className=\"char__grid\">\r\n              {items}\r\n          </ul>\r\n      )\r\n  }\r\n  \r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? <ErrorMessage/> : null;\r\n  const spinner = loading ? <Spinner/> : null;\r\n  const content = !(loading || error) ? items : null;\r\n\r\n  return (\r\n      <div className=\"char__list\">\r\n          {errorMessage}\r\n          {spinner}\r\n          {content}\r\n          <button \r\n              className=\"button button__main button__long\"\r\n              disabled={newItemLoading}\r\n              style={{'display': charEnded ? 'none' : 'block'}}\r\n              onClick={() => onRequest(offset)}>\r\n              <div className=\"inner\">load more</div>\r\n          </button>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default CharList;\r\n "]},"metadata":{},"sourceType":"module"}