[{"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\index.js":"1","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\app\\App.js":"2","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\appHeader\\AppHeader.js":"3","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\charInfo\\CharInfo.js":"4","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\errorBoundary\\ErrorBoundary.js":"5","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\charList\\CharList.js":"6","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\randomChar\\RandomChar.js":"7","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\services\\MarvelService.js":"8","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\ErrorMessage\\ErrorMessage.js":"9","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\spinner\\Spinner.js":"10","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\skeleton\\Skeleton.js":"11","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\hooks\\http.hooks.js":"12","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\comicsList\\ComicsList.js":"13","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\singleComic\\SingleComic.js":"14"},{"size":267,"mtime":1652893038905,"results":"15","hashOfConfig":"16"},{"size":1382,"mtime":1652869720386,"results":"17","hashOfConfig":"16"},{"size":557,"mtime":1652788835594,"results":"18","hashOfConfig":"16"},{"size":2713,"mtime":1652803055094,"results":"19","hashOfConfig":"16"},{"size":431,"mtime":1652437437434,"results":"20","hashOfConfig":"16"},{"size":3059,"mtime":1652821714563,"results":"21","hashOfConfig":"16"},{"size":2677,"mtime":1652891458181,"results":"22","hashOfConfig":"16"},{"size":2175,"mtime":1652891913523,"results":"23","hashOfConfig":"16"},{"size":332,"mtime":1652437437426,"results":"24","hashOfConfig":"16"},{"size":4615,"mtime":1652437437438,"results":"25","hashOfConfig":"16"},{"size":685,"mtime":1652437437437,"results":"26","hashOfConfig":"16"},{"size":929,"mtime":1652798683132,"results":"27","hashOfConfig":"16"},{"size":2462,"mtime":1652891900202,"results":"28","hashOfConfig":"16"},{"size":1708,"mtime":1652891866138,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17lfcp1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\index.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\app\\App.js",["64","65","66","67","68","69","70"],"import AppHeader from \"../appHeader/AppHeader\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport { useState } from \"react\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport SingleComic from \"../singleComic/SingleComic\";\r\n\r\nconst App = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n  const [selectedComic, setSelectedcomic] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id);\r\n  };\r\n\r\n  const onComicSelected = (id) => {\r\n    setSelectedcomic(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <AppHeader />\r\n      <main>\r\n        <ComicsList onComicSelected={onComicSelected} />\r\n        <SingleComic selectedComic={selectedComic} />\r\n        {/* <RandomChar />\r\n        <div className=\"char__content\">\r\n          <CharList\r\n            onCharSelected={onCharSelected}\r\n            selectedChar={selectedChar}\r\n          />\r\n          <ErrorBoundary>\r\n            <CharInfo selectedChar={selectedChar} />\r\n          </ErrorBoundary>\r\n        </div>\r\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\" /> */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",["71","72"],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\appHeader\\AppHeader.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\charInfo\\CharInfo.js",["73"],"import \"./charInfo.scss\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [props.selectedChar]);\r\n\r\n  const updateChar = () => {\r\n    const { selectedChar } = props;\r\n    if (!selectedChar) {\r\n      return;\r\n    }\r\n    clearError();\r\n    getCharacter(selectedChar).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const content = !(loading || error || !char) ? <Char char={char} /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {content}\r\n      {errorMessage}\r\n      {spinner}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Char = ({ char }) => {\r\n  const imgStyle =\r\n    char.thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? { objectFit: \"fill\" }\r\n      : null;\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={char.thumbnail} alt={char.name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{char.name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={char.homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={char.wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">\r\n        {char.description === \"\"\r\n          ? \"Decription is not Aviable\"\r\n          : char.description}\r\n      </div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n\r\n      <ul className=\"char__comics-list\">\r\n        {char.comics.length > 0 ? null : \"Comics is not Aviable\"}\r\n        {char.comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li className=\"char__comics-item\" key={i}>\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  selectedChar: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\errorBoundary\\ErrorBoundary.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\charList\\CharList.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\randomChar\\RandomChar.js",["74"],"import \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState({});\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {content}\r\n      {errorMessage}\r\n      {spinner}\r\n\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n  const style =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? { objectFit: \"fill\" }\r\n      : null;\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt={name}\r\n        style={style}\r\n        className=\"randomchar__img\"\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">\r\n          {/* {description === \"\"\r\n            ? \"Decription is not Aviable\"\r\n            : description.slice(0, 200) + \"...\"} */}\r\n        </p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\services\\MarvelService.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\ErrorMessage\\ErrorMessage.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\spinner\\Spinner.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\skeleton\\Skeleton.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\hooks\\http.hooks.js",[],"C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\comicsList\\ComicsList.js",["75"],"import \"./comicsList.scss\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst ComicsList = (props) => {\r\n  const { getAllComics, loading, error } = useMarvelService();\r\n\r\n  const [offset, setOffset] = useState(210);\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset).then(onComicsListLoaded);\r\n  };\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\r\n    let ended = false;\r\n    if (newComicsList.length < 8) {\r\n      ended = true;\r\n    }\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 9);\r\n    setComicsEnded((comicsEnded) => ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li\r\n          className=\"comics__item\"\r\n          key={i}\r\n          onClick={(id) => props.onComicSelected(item.id)}\r\n        >\r\n          <a href=\"#\">\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.title}\r\n              className=\"comics__item-img\"\r\n            />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">`${item.price}$`</div>\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(comicsList);\r\n  const spinner = loading && !newItemLoading && !error ? <Spinner /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {items}\r\n      {spinner}\r\n      {errorMessage}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        disabled={newItemLoading}\r\n      >\r\n        <div className=\"inner\" onClick={() => onRequest(offset)}>\r\n          load more\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","C:\\MAMP\\htdocs\\projects\\marvelHooks\\src\\components\\singleComic\\SingleComic.js",["76","77"],"import \"./singleComic.scss\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst SingleComic = (props) => {\r\n  const { getSingleComic, loading, error } = useMarvelService();\r\n  const [comics, setComics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const id = props.selectedComic ? props.selectedComic : 98446;\r\n    getSingleComic(id).then(comicUpdate);\r\n  }, [props.selectedComic]);\r\n\r\n  const comicUpdate = (comics) => {\r\n    setComics(comics);\r\n  };\r\n\r\n  const content = !(loading || error) ? <View comics={comics} /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !error ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      {content}\r\n      {errorMessage}\r\n      {spinner}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ comics }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        src={comics.thumbnail}\r\n        alt={comics.title}\r\n        className=\"single-comic__img\"\r\n      />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{comics.title}</h2>\r\n        <p className=\"single-comic__descr\">{comics.description}</p>\r\n        <p className=\"single-comic__descr\">{comics.pageCount} pages</p>\r\n        <p className=\"single-comic__descr\">Language: {comics.language}</p>\r\n        <div className=\"single-comic__price\">\r\n          {comics.price ? comics.price : \"not aviable\"}$\r\n        </div>\r\n      </div>\r\n      <a href=\"#\" className=\"single-comic__back\">\r\n        Back to all\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleComic;\r\n",{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":18},{"ruleId":"78","severity":1,"message":"85","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":21},{"ruleId":"78","severity":1,"message":"86","line":13,"column":10,"nodeType":"80","messageId":"81","endLine":13,"endColumn":22},{"ruleId":"78","severity":1,"message":"87","line":16,"column":9,"nodeType":"80","messageId":"81","endLine":16,"endColumn":23},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"78","severity":1,"message":"92","line":2,"column":31,"nodeType":"80","messageId":"81","endLine":2,"endColumn":37},{"ruleId":"78","severity":1,"message":"93","line":53,"column":17,"nodeType":"80","messageId":"81","endLine":53,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":44,"column":11,"nodeType":"96","endLine":44,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":14,"column":6,"nodeType":"99","endLine":14,"endColumn":27,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"95","line":50,"column":7,"nodeType":"96","endLine":50,"endColumn":50},"no-unused-vars","'RandomChar' is defined but never used.","Identifier","unusedVar","'CharList' is defined but never used.","'CharInfo' is defined but never used.","'decoration' is defined but never used.","'ErrorBoundary' is defined but never used.","'selectedChar' is assigned a value but never used.","'onCharSelected' is assigned a value but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'useRef' is defined but never used.","'description' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSingleComic'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [getSingleComic, props.selectedComic]",{"range":"106","text":"107"},[524,545],"[getSingleComic, props.selectedComic]"]